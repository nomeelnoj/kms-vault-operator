version: 2.1

orbs:
  snyk: snyk/snyk@0.0.8

jobs:
  build:
    machine:
        enabled: true
        image: ubuntu-1604:202007-01
    environment:
      OPERATOR_SDK_VERSION: 0.19.1
      GOPATH: /home/circleci/go
      VAULT_SKIP_VERIFY: 'true'
      GO111MODULE: "on"
    working_directory: /home/circleci/go/src/github.com/patoarvizu/kms-vault-operator
    steps:
      - checkout
      - restore_cache:
          keys:
            - kms-vault-operator-golang-cache-{{ checksum "go.sum" }}
            - kms-vault-operator-docker-image-cache-{{ checksum "Dockerfile" }}
      - run:
          name: Install golang
          command: |
            sudo rm -rf /usr/local/go
            curl -Lo go.linux-amd64.tar.gz "https://dl.google.com/go/go1.13.8.linux-amd64.tar.gz"
            sudo tar -C /usr/local -xzf go.linux-amd64.tar.gz
            mkdir -p ${HOME}/go/bin
            echo 'export PATH="$GOPATH/bin:$PATH"' >> "${BASH_ENV}"
      - run:
          name: Install operator-sdk
          command: |
            curl -L https://github.com/operator-framework/operator-sdk/releases/download/v${OPERATOR_SDK_VERSION}/operator-sdk-v${OPERATOR_SDK_VERSION}-x86_64-linux-gnu -o ${HOME}/go/bin/operator-sdk
            chmod +x ${HOME}/go/bin/operator-sdk
      - run:
          name: Build image
          command: |
            if [ -f /home/circleci/cached-builder.tar ]; do
              docker load --input /home/circleci/cached-builder.tar
            fi
            docker build --target=builder -t patoarvizu/kms-vault-operator:builder-cache .
            docker save -o /home/circleci/cached-builder.tar patoarvizu/kms-vault-operator:builder-cache
            OPERATOR_BUILD_ARGS="--build-arg GIT_COMMIT=$CIRCLE_SHA1 --build-arg GIT_TAG=$CIRCLE_TAG --build-arg COMMIT_TIMESTAMP=$(git log -1 --format=%at) --build-arg AUTHOR_EMAIL=$(git log -1 --format=%ae) --build-arg SIGNATURE_KEY=$(git log -1 --format=%GK)"
            make docker-build IMG="patoarvizu/kms-vault-operator:$CIRCLE_SHA1" OPERATOR_BUILD_ARGS="$OPERATOR_BUILD_ARGS"
            docker tag patoarvizu/kms-vault-operator:$CIRCLE_SHA1 patoarvizu/kms-vault-operator:latest
          no_output_timeout: 30m
      - run:
          name: Install kubectl
          command: |
            curl -Lo kubectl "https://storage.googleapis.com/kubernetes-release/release/v1.12.0/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
            mkdir -p "${HOME}/.kube"
            touch "${HOME}/.kube/config"
      - run:
          name: Install k3d
          command: |
            wget -q -O - https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=v3.0.0 bash
      - save_cache:
          key: kms-vault-operator-golang-cache-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod/cache
      - save_cache:
          key: kms-vault-operator-docker-image-cache-{{ checksum "Dockerfile" }}
          paths:
            - /home/circleci/cached-builder.tar
      - run:
          name: Run all tests
          command: |
            export KUBECONFIG=~/.k3d/k3s-default-config
            k3d cluster create --image rancher/k3s:v1.0.0 --port 8200:30028@server[0] --wait
            k3d image import patoarvizu/kms-vault-operator:latest
            kubectl apply -f https://raw.githubusercontent.com/patoarvizu/common-manifests/master/prometheus-operator/crds.yaml
            kubectl apply -f https://raw.githubusercontent.com/patoarvizu/common-manifests/master/vault/vault-operator.yaml
            kubectl apply -f https://raw.githubusercontent.com/patoarvizu/common-manifests/master/cert-manager/cert-manager-v0.14.1.yaml
            kubectl rollout status -n cert-manager deployment/cert-manager-webhook -w
            kubectl apply -f https://raw.githubusercontent.com/patoarvizu/common-manifests/master/cert-manager/cluster-issuer.yaml
            kubectl apply -f https://raw.githubusercontent.com/patoarvizu/common-manifests/master/vault/vault-external-service.yaml
            kubectl apply -f https://raw.githubusercontent.com/patoarvizu/common-manifests/master/vault/vault-cluster-v1.yaml
            while [ "$(kubectl -n vault get statefulset vault -o jsonpath={.status.readyReplicas})" != "1" ]; do
              sleep 1
            done
            make install
            make deploy
            kubectl -n vault create secret generic aws-secrets --from-literal=AWS_ACCESS_KEY_ID=$(echo $AWS_ACCESS_KEY_ID) --from-literal=AWS_SECRET_ACCESS_KEY=$(echo $AWS_SECRET_ACCESS_KEY)
            go test ./test/e2e/... -root=$(pwd) -kubeconfig=$HOME/.k3d/k3s-default-config -globalMan=test/manifests/global/operator.yaml -v -run .*V1
            kubectl delete -f https://raw.githubusercontent.com/patoarvizu/common-manifests/master/vault/vault-cluster-v1.yaml
            kubectl apply -f https://raw.githubusercontent.com/patoarvizu/common-manifests/master/vault/vault-cluster-v2.yaml
            sleep 3
            while [ "$(kubectl -n vault get statefulset vault -o jsonpath={.status.readyReplicas})" != "1" ]; do
              sleep 1
            done
            go test ./test/e2e/... -root=$(pwd) -kubeconfig=$HOME/.k3d/k3s-default-config -globalMan=test/manifests/global/operator.yaml -v -run .*V2
            kubectl apply -f test/manifests/webhook/webhook.yaml
            go test ./test/e2e/... -root=$(pwd) -kubeconfig=$HOME/.k3d/k3s-default-config -globalMan=test/manifests/global/operator.yaml -v -run TestWebhook*
      - snyk/scan:
          docker-image-name: patoarvizu/kms-vault-operator:latest
          fail-on-issues: true
          project: patoarvizu/kms-vault-operator
          severity-threshold: low
          additional-arguments: "--policy-path=.snyk"
      - run:
          name: Install notary
          command: |
            curl -L https://github.com/theupdateframework/notary/releases/download/v0.6.1/notary-Linux-amd64 -o notary
            chmod +x notary
            sudo mv notary /usr/local/bin
      - run:
          name: Push container
          command: |
            docker login --username $DOCKER_HUB_USER --password $DOCKER_HUB_ACCESS_TOKEN
            echo $ENCODED_NOTARY_ROLE_KEY | base64 -d > ${HOME}/kms-vault-operator-circleci.key
            export NOTARY_DELEGATION_PASSPHRASE=$NOTARY_ROLE_PASSPHRASE
            notary -s https://notary.docker.io -d ~/.docker/trust key import ${HOME}/kms-vault-operator-circleci.key --role kms-vault-operator-circleci
            export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=$NOTARY_DELEGATION_PASSPHRASE
            export DOCKER_CONTENT_TRUST=1
            VERSION=${CIRCLE_TAG:-latest}
            docker tag patoarvizu/kms-vault-operator:$CIRCLE_SHA1 patoarvizu/kms-vault-operator:latest
            docker tag patoarvizu/kms-vault-operator:$CIRCLE_SHA1 patoarvizu/kms-vault-operator:$VERSION
            docker push patoarvizu/kms-vault-operator:$CIRCLE_SHA1
            docker push patoarvizu/kms-vault-operator:$VERSION
            docker push patoarvizu/kms-vault-operator:latest

workflows:
  version: 2
  build-operator:
    jobs:
      - build:
          context: authentication-tokens
          filters:
            tags:
              only: /^v\d+\.\d+.\d+$/